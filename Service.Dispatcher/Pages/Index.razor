@page "/"

@using Enterprise.Agency
@using Enterprise.MessageHub
@using Microsoft.AspNetCore.SignalR.Client
@using System.Collections.Concurrent

@inject NavigationManager NavManager
@implements IAsyncDisposable

<div class="form-group">
    <label>
        User: <input @bind="userInput" />
    </label>
</div>

<div class="form-group">
    <label>
        Message: <input @bind="messageInput" />
    </label>
</div>

<button @onclick="Send" disabled="@(IsConnected == false)">Send</button>

<hr />

<ul>
    @foreach (string message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private string? ConnectionId => office.Connection?.ConnectionId;
    private CancellationTokenSource TokenSource = new();
    private List<string> messages = new();
    private string? userInput;
    private string? messageInput;
    private string server = nameof(server);
    Office<IAgencyContract> office = Office<IAgencyContract>.Create();

    public bool IsConnected => office.Connection?.State == HubConnectionState.Connected;

    protected override async Task OnInitializedAsync()
    {
        office = office.WithCustomConnection(NavManager.ToAbsoluteUri(Addresses.SignalR))
                       .ReceiveLogs((sender, senderId, message) =>
                        {
                            var formattedMessage = $"{sender}: {message}";
                            messages.Add(formattedMessage);
                            InvokeAsync(StateHasChanged);
                        })
                       .Run();
    }

    private async Task Send()
    {
        var message = messageInput ?? "";

        if (userInput is null)
            office.Post(message);
        else
            office.Post($"{userInput} says: {message}");
    }

    public async ValueTask DisposeAsync()
    {
        office.Dispose();
    }
}
