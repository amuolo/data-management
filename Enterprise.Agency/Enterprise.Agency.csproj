<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0, net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <RootNamespace>Enterprise.Agency</RootNamespace>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <PackageId>Muoland.Agency</PackageId>
    <Title>Muoland.Agency</Title>
    <Authors>Muoland</Authors>
    <Description>The Muoland.Agency toolkit empowers developers to create robust scalable web applications with ease. By abstracting complex concurrency models and providing essential APIs, it enables seamless communication between components following the actor model.</Description>
    <PackageProjectUrl>https://github.com/amuolo/data-management</PackageProjectUrl>
    <PackageIcon>Assets/img/robinx.png</PackageIcon>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <RepositoryUrl>https://github.com/amuolo/data-management</RepositoryUrl>
    <PackageLicenseFile>LICENSE</PackageLicenseFile>
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <PackageTags>muoland, actor, model, concurrency, concurrent, actors, distributed, scalable, data, management, application, parallel, concurrent, governance, cloud, performance, threading, queues, jobs, background, long-running, AspNetCore, AspNet, NetCore, MVC, WPF, Razor, Blazor</PackageTags>
    <Version>1.0.5</Version>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="8.0.4" />
    <PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="8.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Enterprise.JobFactory\Enterprise.JobFactory.csproj" PrivateAssets="All" />
    <ProjectReference Include="..\Enterprise.MessageHub\Enterprise.MessageHub.csproj" PrivateAssets="All" />
    <ProjectReference Include="..\Enterprise.Utils\Enterprise.Utils.csproj" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
	<FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>

  <ItemGroup>
    <None Include="..\LICENSE">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
    <None Include="..\README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <None Update="Assets\img\robinx.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <PropertyGroup>
    <TargetsForTfmSpecificBuildOutput> $(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
    <Copyright>GNU General Public License v3.0</Copyright>
    <PackageReleaseNotes>

		23 Apr 2024 Release Note v1.0.5

		- Key improvements in the Manager services
		- Added office registrations with responses
		- Disposal mechanism refactored

		🚀 🚀 🚀

		<!-- 🚀 -->

	</PackageReleaseNotes>
    <Product>Muoland.Agency</Product>
  </PropertyGroup>

  <!-- The following blocks allow to pack the dependent project together with this one -->
	
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="BuildOnlySettings;ResolveReferences">
	<ItemGroup>
	  <_ReferenceCopyLocalPaths Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference')-&gt;WithMetadataValue('PrivateAssets', 'All'))" />
	</ItemGroup>

    <ItemGroup>
	  <BuildOutputInPackage Include="@(_ReferenceCopyLocalPaths)" TargetPath="%(_ReferenceCopyLocalPaths.DestinationSubDirectory)" />
    </ItemGroup>
  </Target>

</Project>
